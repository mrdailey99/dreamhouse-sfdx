"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
/*
 * Copyright (c) 2019, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const command_1 = require("@salesforce/command");
const core_1 = require("@salesforce/core");
const projectGenerator_1 = require("../../../generators/projectGenerator");
const utils_1 = require("../../../utils");
core_1.Messages.importMessagesDirectory(__dirname);
const messages = core_1.Messages.loadMessages('salesforcedx-templates', 'messages');
class Project extends utils_1.TemplateCommand {
    run() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
            utils_1.CreateUtil.checkInputs(this.flags.projectname);
            utils_1.CreateUtil.checkInputs(this.flags.template);
            // namespace is a reserved keyword for the generator
            this.flags.ns = this.flags.namespace;
            // TODO: update the latest apiversion
            this.flags.sourceApiVersion = '47.0';
            this.flags.loginURL = this.flags.loginurl;
            return this.runGenerator(projectGenerator_1.default);
        });
    }
}
Project.examples = [
    '$ sfdx force:project:create --projectname mywork',
    '$ sfdx force:project:create --projectname mywork --defaultpackagedir myapp',
    '$ sfdx force:project:create --projectname mywork --defaultpackagedir myapp --manifest',
    '$ sfdx force:project:create --projectname mywork --template empty'
];
Project.description = messages.getMessage('ProjectCommandDescription');
Project.flagsConfig = {
    outputdir: command_1.flags.string({
        char: 'd',
        description: messages.getMessage('outputdir'),
        default: process.cwd()
    }),
    projectname: command_1.flags.string({
        char: 'n',
        description: messages.getMessage('projectname'),
        required: true
    }),
    defaultpackagedir: command_1.flags.string({
        char: 'p',
        description: messages.getMessage('defaultpackagedir'),
        default: 'force-app'
    }),
    namespace: command_1.flags.string({
        char: 's',
        description: messages.getMessage('namespace'),
        default: ''
    }),
    template: command_1.flags.string({
        char: 't',
        description: messages.getMessage('template'),
        default: 'standard',
        options: ['standard', 'empty', 'analytics']
    }),
    manifest: command_1.flags.boolean({
        char: 'x',
        description: messages.getMessage('manifest')
    }),
    loginurl: command_1.flags.string({
        char: 'l',
        description: messages.getMessage('loginurl'),
        default: 'https://login.salesforce.com',
        hidden: true
    })
};
exports.default = Project;
//# sourceMappingURL=create.js.map