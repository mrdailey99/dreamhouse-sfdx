"use strict";
/*
 * Copyright (c) 2016, salesforce.com, inc.
 * All rights reserved.
 * Licensed under the BSD 3-Clause license.
 * For full license text, see LICENSE.txt file in the repo root or https://opensource.org/licenses/BSD-3-Clause
 */
const BBPromise = require("bluebird");
const selenium = BBPromise.promisifyAll(require('selenium-standalone'));
class SeleniumRunner {
    start(config = {}) {
        // Install if it isn't already installed. Should get an error if java is not installed.
        const promise = new BBPromise((resolve, reject) => {
            const installConfig = { logger: config.logger };
            if (config.drivers) {
                installConfig.drivers = {};
                Object.assign(installConfig.drivers, config.drivers);
            }
            selenium.install(installConfig, (err, res) => {
                if (err) {
                    reject(err);
                }
                else {
                    resolve(res);
                }
            });
        });
        return promise
            .then(() => selenium.startAsync(config))
            .then(child => {
            this.process = child;
            return true;
        });
    }
    kill() {
        if (this.process) {
            this.process.kill();
        }
    }
}
module.exports = SeleniumRunner;

//# sourceMappingURL=seleniumRunner.js.map
