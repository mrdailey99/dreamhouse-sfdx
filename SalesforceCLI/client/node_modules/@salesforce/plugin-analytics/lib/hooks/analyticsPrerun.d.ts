import { Hook, Hooks } from '@oclif/config';
import { Org } from '@salesforce/core';
import { Dictionary } from '@salesforce/ts-types';
export declare const GdprDefaultLabel = "<GDPR_HIDDEN>";
export interface AnalyticsLogRecord {
    [key: string]: string | number | undefined;
    commandName: string;
    toolbeltVersion: string;
    hubOrgId: string;
    usageDate: string;
    totalExecutions: number;
    totalErrors: number;
    avgRuntime: number;
    minRuntime: number;
    maxRuntime: number;
}
export interface ErrorLogRecord {
    [key: string]: string | number | undefined;
    commandName: string;
    commandParams: string;
    commandTimestamp: number;
    hubOrgId: string;
    toolbeltVersion: string;
    sourceApiVersion: string;
    origin: string;
    artifactName: string;
    orgType: string;
    errorName: string;
    errorMessage: string;
    errorStack: string | undefined;
    __errorWhitelist__: string;
}
declare type LogRecord = AnalyticsLogRecord | ErrorLogRecord;
declare type LogType = 'ERROR' | 'DIAGNOSTIC';
export declare function acknowledgeDataCollection(hookContext: Hook.Context): Promise<void>;
export declare const getVCSInfo: () => Promise<string>;
export declare function calcUsage(hookContext: Hook.Context, devhubOrg: Org, startOfDay: Date): Promise<Dictionary<AnalyticsLogRecord>>;
export declare function logOnServer(logType: LogType, usages: LogRecord[]): Promise<void>;
export declare function logUsage(hookContext: Hook.Context): Promise<void>;
export declare function writeUsage(hookContext: Hook.Context, options: Hooks['prerun']): Promise<void>;
/**
 * A hook that runs before every command that:
 *   1. Warns the user about command usage data collection the CLI does
 *      unless they have already acknowledged the warning.
 *   2. Logs command usage data to the server if more than 24 hours has passed
 *      since the last command execution.
 *   3. Writes command execution stats to a file after command has finished running.
 */
declare const hook: Hook.Prerun;
export default hook;
