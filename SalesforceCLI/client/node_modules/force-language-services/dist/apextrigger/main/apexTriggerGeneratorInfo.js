"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const generatorUtil_1 = require("../../common/main/generatorUtil");
const configuration_1 = require("../../common/main/configuration");
class ApexTriggerGeneratorInfo {
    getSuffix() {
        return ApexTriggerGeneratorInfo.APEX_TRIGGER_SUFFIX;
    }
    getTemplates() {
        return generatorUtil_1.GeneratorUtil.getTemplates(__dirname, ApexTriggerGeneratorInfo.APEX_TRIGGER_SUFFIX);
    }
    getDefaultTemplate() {
        return this.getTemplates()[0];
    }
    isValidTemplate(template) {
        return generatorUtil_1.GeneratorUtil.isValidTemplate(this.getTemplates(), template);
    }
    getApiVersions() {
        return generatorUtil_1.GeneratorUtil.getValidApiVersionValues(ApexTriggerGeneratorInfo.LOW_API_VERSION, ApexTriggerGeneratorInfo.HIGH_API_VERSION);
    }
    getDefaultApiVersion() {
        return ApexTriggerGeneratorInfo.HIGH_API_VERSION.toFixed(1);
    }
    getHighApiVersion() {
        return ApexTriggerGeneratorInfo.HIGH_API_VERSION.toFixed(1);
    }
    getLowApiVersion() {
        return ApexTriggerGeneratorInfo.LOW_API_VERSION.toFixed(1);
    }
    isValidApiVersion(apiVersion) {
        return generatorUtil_1.GeneratorUtil.isValidApiVersion(apiVersion, ApexTriggerGeneratorInfo.LOW_API_VERSION, ApexTriggerGeneratorInfo.HIGH_API_VERSION);
    }
}
ApexTriggerGeneratorInfo.APEX_TRIGGER_SUFFIX = '.trigger';
ApexTriggerGeneratorInfo.APEX_TRIGGER_NAME_OPTION = 'apiName';
ApexTriggerGeneratorInfo.APEX_TRIGGER_SOBJECT_OPTION = 'sobject';
ApexTriggerGeneratorInfo.APEX_TRIGGER_TRIGGER_EVENTS_OPTION = 'triggerEvents';
ApexTriggerGeneratorInfo.TRIGGER_EVENTS = ['before insert', 'before update', 'before delete', 'after insert',
    'after update', 'after delete', 'after undelete'];
ApexTriggerGeneratorInfo.DEFAULT_SOBJECT = 'SOBJECT';
ApexTriggerGeneratorInfo.LOW_API_VERSION = configuration_1.Configuration.getDefaultLowApiVersion();
ApexTriggerGeneratorInfo.HIGH_API_VERSION = configuration_1.Configuration.getDefaultHighApiVersion();
exports.ApexTriggerGeneratorInfo = ApexTriggerGeneratorInfo;

//# sourceMappingURL=apexTriggerGeneratorInfo.js.map
