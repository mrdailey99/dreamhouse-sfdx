"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const forceGeneratorAdapter_1 = require("../../common/main/forceGeneratorAdapter");
const generatorUtil_1 = require("../../common/main/generatorUtil");
const yoEnvironment = require("yeoman-environment");
const path = require("path");
const projectGenerator_1 = require("../../project/main/projectGenerator");
const projectGeneratorInfo_1 = require("../../project/main/projectGeneratorInfo");
class CreateBase {
    create(name, targetPath, options, generatorName, checkInputs, addGenerators) {
        return __awaiter(this, void 0, void 0, function* () {
            let env = undefined; // no types for yeoman-environment
            let adapter;
            let fullOptions = generatorUtil_1.GeneratorUtil.normalizeOptions(options);
            const originalCwd = process.cwd();
            let fullTargetPath = originalCwd;
            if (targetPath) {
                fullTargetPath = path.resolve(targetPath);
            }
            fullOptions['targetPath'] = targetPath;
            adapter = new forceGeneratorAdapter_1.ForceGeneratorAdapter(fullOptions);
            env = yoEnvironment.createEnv(undefined, undefined, adapter);
            addGenerators(env);
            let retP = new Promise(function (resolve, reject) {
                function done(err) {
                    // This is a patch fix for project:create commands the real fix is be to re-write
                    // projectGenerator.ts to properly address differences between its templates
                    if (generatorName === projectGenerator_1.ProjectGenerator.GENERATOR_NAME && options && options[generatorUtil_1.GeneratorUtil.TEMPLATE_OPTION] !==
                        projectGeneratorInfo_1.ProjectGeneratorInfo.EMPTY_TEMPLATE) {
                        fullTargetPath = path.join(fullTargetPath, name);
                    }
                    let logOutput = 'target dir = ' + fullTargetPath + '\n' + adapter.log.getOutput();
                    if (targetPath) {
                        process.chdir(originalCwd);
                    }
                    if (err) {
                        reject(new Error(err));
                    }
                    else {
                        resolve(logOutput);
                    }
                }
                let check = checkInputs();
                if (check.length > 0) {
                    reject(new Error(check));
                }
                else {
                    env.run(generatorName, fullOptions, done);
                }
            });
            return retP;
        });
    }
}
exports.CreateBase = CreateBase;

//# sourceMappingURL=createBase.js.map
