"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const generator = require("yeoman-generator");
const path = require("path");
const generatorUtil_1 = require("../../common/main/generatorUtil");
const Messages = require("../../common/main/Messages");
/**
 * Used for the simple cases where the lightning generator just does a copy of a template given the bundle name
 */
class LightningBaseCopyGenerator extends generator.Base {
    constructor(args, options, lightningType, lightningExt, generatorDir, includeTypeInTarget = true) {
        super(args, options);
        this.includeTypeInTarget = true;
        generatorUtil_1.GeneratorUtil.setPaths(generatorDir, this, options);
        this.lOptions = options;
        this.lightningType = lightningType;
        this.lightningExt = lightningExt;
        this.includeTypeInTarget = includeTypeInTarget;
        this.argument('bundleName', {
            desc: Messages.get('BundleNameArgument'),
            required: true,
            type: 'String',
            defaults: ''
        });
    }
    writing() {
        let currentAuraBundle = this.lOptions['bundleRoot'];
        let componentName = this.bundleName;
        if (this.includeTypeInTarget) {
            componentName = componentName + this.lightningType;
        }
        this.fs.copyTpl(this.templatePath('DefaultLightning' + this.lightningType + '.' + this.lightningExt), this.destinationPath(path.join(currentAuraBundle, componentName + '.' + this.lightningExt)), {});
    }
}
exports.LightningBaseCopyGenerator = LightningBaseCopyGenerator;
;

//# sourceMappingURL=lightningBaseCopyGenerator.js.map
