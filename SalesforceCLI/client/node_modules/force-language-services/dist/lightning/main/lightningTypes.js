"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var LightningBundles;
(function (LightningBundles) {
    LightningBundles[LightningBundles["lightningapp"] = 0] = "lightningapp";
    LightningBundles[LightningBundles["lightningcmp"] = 1] = "lightningcmp";
    LightningBundles[LightningBundles["lightningwebcomponent"] = 2] = "lightningwebcomponent";
    LightningBundles[LightningBundles["lightningevt"] = 3] = "lightningevt";
    LightningBundles[LightningBundles["lightningintf"] = 4] = "lightningintf";
})(LightningBundles = exports.LightningBundles || (exports.LightningBundles = {}));
var LightningTypes;
(function (LightningTypes) {
    LightningTypes["aura"] = "aura";
    LightningTypes["lwc"] = "lwc";
})(LightningTypes = exports.LightningTypes || (exports.LightningTypes = {}));
class LightningTypesUtil {
    static getBundle(typeName) {
        return LightningBundles[typeName];
    }
    static getSuffix(lightningType) {
        return LightningTypesUtil.lightningMap.get(lightningType);
    }
    static getCmdName(lightningType) {
        return LightningTypesUtil.lightningCmdNameMap.get(lightningType);
    }
}
LightningTypesUtil.mapGenerator = function () {
    let theMap = new Map();
    theMap.set(LightningBundles.lightningapp, 'app');
    theMap.set(LightningBundles.lightningcmp, 'cmp');
    theMap.set(LightningBundles.lightningwebcomponent, 'js');
    theMap.set(LightningBundles.lightningevt, 'evt');
    theMap.set(LightningBundles.lightningintf, 'intf');
    return theMap;
};
LightningTypesUtil.lightningMap = LightningTypesUtil.mapGenerator();
LightningTypesUtil.cmdNameGenerator = function () {
    let theMap = new Map();
    theMap.set(LightningBundles.lightningapp, 'app');
    theMap.set(LightningBundles.lightningcmp, 'component');
    theMap.set(LightningBundles.lightningwebcomponent, 'js');
    theMap.set(LightningBundles.lightningevt, 'event');
    theMap.set(LightningBundles.lightningintf, 'interface');
    return theMap;
};
LightningTypesUtil.lightningCmdNameMap = LightningTypesUtil.cmdNameGenerator();
LightningTypesUtil.lightningChoices = [
    LightningBundles[LightningBundles.lightningapp],
    LightningBundles[LightningBundles.lightningcmp],
    LightningBundles[LightningBundles.lightningwebcomponent],
    LightningBundles[LightningBundles.lightningevt],
    LightningBundles[LightningBundles.lightningintf]
];
exports.LightningTypesUtil = LightningTypesUtil;

//# sourceMappingURL=lightningTypes.js.map
