"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const path = require("path");
const lightningTypes_1 = require("../../lightning/main/lightningTypes");
const lightningTypeBaseGenerator_1 = require("../../lightning/main/lightningTypeBaseGenerator");
const lightningModule_1 = require("../../lightning/main/lightningModule");
class LightningLwcGenerator extends lightningTypeBaseGenerator_1.LightningTypeBaseGenerator {
    constructor(args, options) {
        super(args, options, 'Component', lightningTypes_1.LightningBundles.lightningwebcomponent, __dirname, false);
    }
    prompting() {
        return super.prompting();
    }
    writing() {
        const bundleName = this.bundleName.charAt(0).toLowerCase() + this.bundleName.slice(1);
        const bundleRoot = bundleName;
        const componentRoot = path.join(bundleRoot, bundleName);
        const jsClassName = this.bundleName.charAt(0).toUpperCase() + this.bundleName.slice(1);
        this.fs.copyTpl(this.templatePath(this.options['template'] + this.genInfo.getSuffix()), this.destinationPath(componentRoot + this.genInfo.getSuffix()), {
            apiName: jsClassName
        });
        const isInternal = this.lOptions[lightningModule_1.LightningModule.LIGHTNING_INTERNAL_FLAG];
        if (typeof isInternal === undefined || !isInternal) {
            this.fs.copyTpl(this.templatePath('_js-meta.xml'), this.destinationPath(componentRoot + '.js-meta.xml'), {
                apiName: this.bundleName,
                apiVersion: this.options['apiVersion']
            });
        }
        this.fs.copyTpl(this.templatePath('_.html'), this.destinationPath(componentRoot + '.html'), {});
    }
}
exports.LightningLwcGenerator = LightningLwcGenerator;

//# sourceMappingURL=lightningLwcGenerator.js.map
