"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const generator = require("yeoman-generator");
const generatorUtil_1 = require("../../common/main/generatorUtil");
const vscodeGeneratorInfo_1 = require("./vscodeGeneratorInfo");
const path = require("path");
const vscodeModule_1 = require("./vscodeModule");
class VSCodeGenerator extends generator.Base {
    constructor(args, options) {
        super(args, options);
        generatorUtil_1.GeneratorUtil.setPaths(__dirname, this, options);
    }
    writing() {
        this.fs.copyTpl(this.templatePath(vscodeGeneratorInfo_1.VSCodeGeneratorInfo.SETTINGS_CONFIG_NAME), this.destinationPath(path.join(vscodeGeneratorInfo_1.VSCodeGeneratorInfo.VSCODE_CONFIG_FOLDER, vscodeGeneratorInfo_1.VSCodeGeneratorInfo.SETTINGS_CONFIG_NAME)), {});
        this.fs.copyTpl(this.templatePath(vscodeGeneratorInfo_1.VSCodeGeneratorInfo.LAUNCH_CONFIG_NAME), this.destinationPath(path.join(vscodeGeneratorInfo_1.VSCodeGeneratorInfo.VSCODE_CONFIG_FOLDER, vscodeGeneratorInfo_1.VSCodeGeneratorInfo.LAUNCH_CONFIG_NAME)), {});
        const extensions = (this.fs.readJSON(this.templatePath(vscodeGeneratorInfo_1.VSCodeGeneratorInfo.EXTENSIONS_CONFIG_NAME)));
        if (this.options[vscodeModule_1.VSCodeModule.ESLINT_FLAG]) {
            extensions.recommendations.push(vscodeGeneratorInfo_1.VSCodeGeneratorInfo.ESLINT_VSCODE_EXTENSION);
        }
        if (this.options[vscodeModule_1.VSCodeModule.PRETTIER_FLAG]) {
            extensions.recommendations.push(vscodeGeneratorInfo_1.VSCodeGeneratorInfo.PRETTIER_VSCODE_EXTENSION);
        }
        this.fs.writeJSON(this.destinationPath(path.join(vscodeGeneratorInfo_1.VSCodeGeneratorInfo.VSCODE_CONFIG_FOLDER, vscodeGeneratorInfo_1.VSCodeGeneratorInfo.EXTENSIONS_CONFIG_NAME)), extensions, undefined, 2);
    }
}
VSCodeGenerator.GENERATOR_NAME = 'force:vscode';
exports.VSCodeGenerator = VSCodeGenerator;

//# sourceMappingURL=vscodeGenerator.js.map
