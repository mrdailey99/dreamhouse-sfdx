"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Display = require("../force-cli/force-cli-display");
const Config = require("../force-cli/force-cli-config");
const Messages = require("../force-cli/force-cli-messages");
const DataRecordUtils = require("./dataRecordUtils");
class DataRecordDeleteCommand {
    async execute(context) {
        DataRecordUtils.validateIdXorWhereFlags(context);
        const conn = await Config.getActiveConnection(context);
        const sobjectid = await DataRecordUtils.retrieveId(conn, context);
        // TODO: delete() returns RecordResult[] so this may be a bug in the impl unless we know
        //       we are assured of only deleting 1 record.
        const result = context.flags.usetoolingapi
            ? await conn.tooling.destroy(context.flags.sobjecttype, sobjectid)
            : await conn.sobject(context.flags.sobjecttype).destroy(sobjectid);
        if (result.success) {
            Display.success(Messages.get('DataRecordDeleteSuccess', sobjectid));
        }
        else {
            let errors = '';
            if (result.errors) {
                errors = '\nErrors:\n';
                result.errors.forEach(function (err) {
                    errors += '  ' + err + '\n';
                });
            }
            Display.failure(Messages.get('DataRecordDeleteFailure', errors));
        }
        return result;
    }
}
exports.DataRecordDeleteCommand = DataRecordDeleteCommand;

//# sourceMappingURL=dataRecordDeleteCommand.js.map
