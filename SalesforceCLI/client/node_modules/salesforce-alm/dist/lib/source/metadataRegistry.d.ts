declare class MetadataRegistry {
    private org;
    private typeDefs;
    private lightningDefTypes;
    private waveDefTypes;
    private lwcDefTypes;
    private typeDefsByExtension;
    private metadataFileExt;
    constructor(org: any);
    isSupported(metadataName: any): any;
    static getMetadataFileExt(): string;
    static initializeMetadataTypeInfos(orgApi?: any): any;
    handleIfSharingRuleElement(sourceElement: any): any;
    getMetadataTypeDefs(): any;
    getTypeDefsByExtension(): Map<any, any>;
    getLightningDefByFileName(fileName: any): any;
    getWaveDefByFileName(fileName: any): any;
    getLightningDefByType(type: any): any;
    /**
     * Returns the array of typeDefs where the default directory of each typeDef matches the passed in 'name' param
     * @param name
     * @returns {any[]}
     */
    getTypeDefinitionsByDirectoryName(name: any): any[];
    getTypeDefinitionByMetadataName(metadataName: any): any;
    getTypeDefinitionByFileName(filePath: any, useTrueExtType?: any): any;
    private getTypeDefinitionByFileNameWithNonStandardExtension;
    private getTypeDefinitionByFileNameWithCoresidentMetadataFile;
    private getTypeDefinitionByFileNameMatchingDefaultDirectory;
    private isDirPathExpended;
    isValidAuraSuffix(suffix: any): boolean;
    isValidWaveTemplateSuffix(suffix: any): boolean;
    isValidLwcSuffix(suffix: any): boolean;
    isValidMetadataExtension(ext: any): boolean;
    isValidDecompositionExtension(ext: any): boolean;
    isValidExperienceBundleFile(sourcePath: any): boolean;
    /**
     * @param dirName - metadataObjDirName
     * @param pathToSplit - /baseDir/metadataObjDirName(ie, dirName)/bundleFiles
     *
     * This function is like pathToSplit.split(dirName). except that it splits on the last occurance of dirName
     * If there is a parent dir with the same name as metadata object dir name, then pathToSplit.split(dirName) may
     * not give desired result, so getting the last occurance of the dir name to split on and splitting based on that
     *
     * @param pathToSplit - An array with 2 elements in it. pathToSplit[0] - baseDir and pathToSplit[1] - bundleFiles
     */
    static splitOnDirName(dirName: string, pathToSplit: string): string[];
    isValidSourceFilePath(sourcePath: any): boolean;
    isCustomName(name: any): boolean;
}
export = MetadataRegistry;
